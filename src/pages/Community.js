import React, { useEffect, useState, useCallback, useMemo } from 'react';
import { useLocation } from 'react-router-dom';
import {
  Container,
  Typography,
  Grid,
  Card,
  CardContent,
  Button,
  Box,
  Chip,
  Paper,
  alpha,
} from '@mui/material';
import { styled } from '@mui/material/styles';
import GroupIcon from '@mui/icons-material/Group';
import FavoriteIcon from '@mui/icons-material/Favorite';
import PetsIcon from '@mui/icons-material/Pets';
import PeopleIcon from '@mui/icons-material/People';

// Styled components with memoization for better performance
const CommunityCard = styled(Card)(({ theme }) => ({
  height: '100%',
  display: 'flex',
  flexDirection: 'column',
  transition: 'transform 0.2s',
  '&:hover': {
    transform: 'translateY(-4px)',
  },
}));

const DecorativeLine = styled(Box)(({ theme }) => ({
  width: '60px',
  height: '4px',
  background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,
  borderRadius: '2px',
  margin: '0 auto 16px',
}));

const AudienceCard = styled(Paper)(({ theme }) => ({
  padding: theme.spacing(4),
  textAlign: 'center',
  height: '100%',
  display: 'flex',
  flexDirection: 'column',
  alignItems: 'center',
  position: 'relative',
  overflow: 'hidden',
  transition: 'all 0.3s ease',
  backgroundColor: theme.palette.background.paper,
  '&::before': {
    content: '""',
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    height: '4px',
    background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,
    transform: 'scaleX(0)',
    transition: 'transform 0.3s ease',
  },
  '&:hover': {
    transform: 'translateY(-8px)',
    boxShadow: theme.shadows[8],
    '&::before': {
      transform: 'scaleX(1)',
    },
    '& .MuiSvgIcon-root': {
      transform: 'scale(1.1) rotate(5deg)',
      color: theme.palette.primary.main,
    },
    '& .audience-title': {
      color: theme.palette.primary.main,
    }
  },
}));

const IconWrapper = styled(Box)(({ theme }) => ({
  width: '80px',
  height: '80px',
  borderRadius: '50%',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  marginBottom: theme.spacing(2),
  backgroundColor: alpha(theme.palette.primary.main, 0.1),
  transition: 'all 0.3s ease',
  '& .MuiSvgIcon-root': {
    fontSize: '40px',
    color: theme.palette.primary.main,
    transition: 'all 0.3s ease',
  },
}));

// Constants moved outside component to prevent recreation
const FACEBOOK_GROUPS = {
  PET_CARE: 'https://www.facebook.com/groups/959541987720820/',
  PET_HEALTH: 'https://www.facebook.com/groups/hotrotuvanchamsocbenhtieuchaychomeohanoi/',
  PET_RESCUE: 'https://www.facebook.com/savesgt'
};

// Welcome message content based on navigation source
const WELCOME_MESSAGES = {
  services: {
    title: "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi c·ªông ƒë·ªìng chƒÉm s√≥c th√∫ c∆∞ng c·ªßa ch√∫ng t√¥i! üêæ",
    description: "C·∫£m ∆°n b·∫°n ƒë√£ tham gia c·ªông ƒë·ªìng c·ªßa ch√∫ng t√¥i! T·∫°i ƒë√¢y, b·∫°n c√≥ th·ªÉ k·∫øt n·ªëi v·ªõi nh·ªØng ch·ªß nu√¥i th√∫ c∆∞ng kh√°c, chia s·∫ª kinh nghi·ªám v√† nh·∫≠n ƒë∆∞·ª£c nh·ªØng l·ªùi khuy√™n chuy√™n m√¥n v·ªÅ chƒÉm s√≥c th√∫ c∆∞ng. H√£y b·∫Øt ƒë·∫ßu b·∫±ng c√°ch kh√°m ph√° c√°c nh√≥m ho·∫∑c tham gia v√†o m·ªôt cu·ªôc th·∫£o lu·∫≠n!"
  },
  default: {
    title: "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi c·ªông ƒë·ªìng c·ªßa ch√∫ng t√¥i! üëã",
    description: "Ch√∫ng t√¥i r·∫•t vui khi c√≥ b·∫°n ƒë·∫øn v·ªõi c·ªông ƒë·ªìng c·ªßa ch√∫ng t√¥i! H√£y tham gia c√°c nh√≥m, tham gia v√†o cu·ªôc th·∫£o lu·∫≠n v√† k·∫øt n·ªëi v·ªõi nh·ªØng ng∆∞·ªùi y√™u th√∫ c∆∞ng kh√°c."
  }
};

const GROUPS = [
  {
    title: 'H·ªôi Chia S·∫ª Kinh Nghi·ªám ChƒÉm S√≥c Ch√≥ M√®o',
    members: 320700,
    description: 'M·ªôt c·ªông ƒë·ªìng d√†nh cho c√°c ch·ªß nu√¥i th√∫ c∆∞ng ƒë·ªÉ chia s·∫ª kinh nghi·ªám v√† l·ªùi khuy√™n.',
    topics: ['Hu·∫•n luy·ªán', 'S·ª©c kh·ªèe', 'H√†nh vi', 'ChƒÉm s√≥c'],
    url: FACEBOOK_GROUPS.PET_CARE
  },
  {
    title: 'H·ªó Tr·ª£ T∆∞ V·∫•n ChƒÉm S√≥c T·∫•t C·∫£ C√°c B·ªánh Ch√≥ M√®o',
    members: 83700,
    description: 'M·∫°ng l∆∞·ªõi chia s·∫ª v√† ƒë∆∞a ra c√°c l·ªùi khuy√™n v·ªÅ s·ª©c kh·ªèe th√∫ c∆∞ng',
    topics: ['Nu√¥i d∆∞·ª°ng', 'ChƒÉm s√≥c'],
    url: FACEBOOK_GROUPS.PET_HEALTH
  },
  {
    title: 'M·∫°ng L∆∞·ªõi C·ª©u Tr·ª£ Th√∫ C∆∞ng',
    members: 175000,
    description: 'K·∫øt n·ªëi v·ªõi c√°c t·ªï ch·ª©c c·ª©u tr·ª£ v√† b·∫°n b√® ƒë·ªìng h√†nh.',
    topics: ['C·ª©u tr·ª£', 'T√¨nh nguy·ªán', 'Nu√¥i d∆∞·ª°ng', 'Nh·∫≠n nu√¥i'],
    url: FACEBOOK_GROUPS.PET_RESCUE
  }
];

const AUDIENCE_ITEMS = [
  {
    title: 'Ch·ªß nu√¥i th√∫ c∆∞ng',
    icon: PetsIcon,
    description: 'Nh·ªØng ng∆∞·ªùi ƒëang chƒÉm s√≥c th√∫ c∆∞ng v√† t√¨m ki·∫øm d·ªãch v·ª• ch·∫•t l∆∞·ª£ng'
  },
  {
    title: 'Ng∆∞·ªùi y√™u ƒë·ªông v·∫≠t',
    icon: FavoriteIcon,
    description: 'Nh·ªØng ng∆∞·ªùi quan t√¢m v√† mu·ªën ƒë√≥ng g√≥p cho c·ªông ƒë·ªìng th√∫ c∆∞ng'
  },
  {
    title: 'Chuy√™n gia chƒÉm s√≥c th√∫ c∆∞ng',
    icon: GroupIcon,
    description: 'C√°c b√°c sƒ© th√∫ y, hu·∫•n luy·ªán vi√™n v√† chuy√™n gia trong lƒ©nh v·ª±c'
  },
  {
    title: 'Th√†nh vi√™n c·ªông ƒë·ªìng',
    icon: PeopleIcon,
    description: 'Nh·ªØng ng∆∞·ªùi mu·ªën k·∫øt n·ªëi v√† chia s·∫ª kinh nghi·ªám v·ªõi c·ªông ƒë·ªìng'
  }
];

const Community = () => {
  const [showWelcome, setShowWelcome] = useState(true);
  const location = useLocation();
  

  // Memoized welcome message based on navigation source
  const welcomeMessage = useMemo(() => {
    return location.state?.from === 'services' 
      ? WELCOME_MESSAGES.services 
      : WELCOME_MESSAGES.default;
  }, [location.state?.from]);

  // Memoized close handler to prevent unnecessary re-renders
  const handleCloseWelcome = useCallback(() => {
    setShowWelcome(false);
  }, []);

  // Memoized join group handler
  const handleJoinGroup = useCallback((url) => {
    window.open(url, '_blank', 'noopener,noreferrer');
  }, []);

  useEffect(() => {
    const fromServices = location.state?.from === 'services';
    const hasVisitedBefore = localStorage.getItem('hasVisitedCommunity');
    
    if (fromServices || !hasVisitedBefore) {
      if (!hasVisitedBefore) {
        localStorage.setItem('hasVisitedCommunity', 'true');
      }
      setShowWelcome(true);
    } else {
      setShowWelcome(false);
    }
  }, [location]);

  return (
    <Container maxWidth="lg" sx={{ py: 4 }}>
      {showWelcome && (
        <Box
          sx={{
            mb: 4,
            p: 3,
            bgcolor: 'primary.main',
            color: 'white',
            borderRadius: 2,
            position: 'relative',
          }}
        >
          <Typography variant="h5" gutterBottom>
            {welcomeMessage.title}
          </Typography>
          <Typography variant="body1" paragraph>
            {welcomeMessage.description}
          </Typography>
          <Button
            variant="contained"
            color="secondary"
            onClick={handleCloseWelcome}
            sx={{ mt: 2 }}
          >
            B·∫Øt ƒë·∫ßu
          </Button>
        </Box>
      )}

      <Typography variant="h3" component="h1" gutterBottom align="center">
        C·ªông ƒë·ªìng
      </Typography>
      <Typography variant="h6" color="text.secondary" paragraph align="center">
        H√£y gia nh·∫≠p c·ªông ƒë·ªìng s√¥i ƒë·ªông c·ªßa nh·ªØng ng∆∞·ªùi y√™u th√∫ c∆∞ng v√† c√°c chuy√™n gia
      </Typography>

      {/* Target Audience Section */}
      <Box sx={{ mb: 8 }}>
        <Typography variant="h4" gutterBottom align="center" sx={{ mb: 2 }}>
          ƒê·ªëi T∆∞·ª£ng Tham Gia
        </Typography>
        <DecorativeLine />
        <Grid container spacing={4}>
          {AUDIENCE_ITEMS.map((item, index) => {
            const Icon = item.icon;
            return (
              <Grid item xs={12} sm={6} md={3} key={index}>
                <AudienceCard elevation={2}>
                  <IconWrapper>
                    <Icon />
                  </IconWrapper>
                  <Typography 
                    variant="h6" 
                    gutterBottom 
                    className="audience-title"
                    sx={{ 
                      fontWeight: 600,
                      transition: 'color 0.3s ease'
                    }}
                  >
                    {item.title}
                  </Typography>
                  <Typography 
                    variant="body2" 
                    color="text.secondary"
                    sx={{ mt: 1 }}
                  >
                    {item.description}
                  </Typography>
                </AudienceCard>
              </Grid>
            );
          })}
        </Grid>
      </Box>

      {/* Groups Section */}
      <Typography variant="h4" gutterBottom>
        C√°c nh√≥m
      </Typography>
      <Grid container spacing={3}>
        {GROUPS.map((group, index) => (
          <Grid item xs={12} key={index}>
            <CommunityCard>
              <CardContent>
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                  <GroupIcon sx={{ mr: 1 }} color="primary" />
                  <Typography variant="h5" component="h2">
                    {group.title}
                  </Typography>
                </Box>
                <Typography variant="body1" paragraph>
                  {group.description}
                </Typography>
                <Box sx={{ mb: 2 }}>
                  {group.topics.map((topic, idx) => (
                    <Chip
                      key={idx}
                      label={topic}
                      size="small"
                      sx={{ mr: 1, mb: 1 }}
                    />
                  ))}
                </Box>
                <Typography variant="body2" color="text.secondary">
                  {group.members.toLocaleString()} th√†nh vi√™n
                </Typography>
                <Button
                  variant="contained"
                  color="primary"
                  sx={{ mt: 2 }}
                  onClick={() => handleJoinGroup(group.url)}
                >
                  Tham gia nh√≥m
                </Button>
              </CardContent>
            </CommunityCard>
          </Grid>
        ))}
      </Grid>
    </Container>
  );
};

export default Community; 